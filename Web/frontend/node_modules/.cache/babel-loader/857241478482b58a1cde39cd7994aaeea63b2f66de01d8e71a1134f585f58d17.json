{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\SmartCare\\\\frontend\\\\src\\\\components\\\\Mainbutt.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../Styles/Mainbutt.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    rememberMe: false\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === 'checkbox' ? checked : value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    alert(`Logged in as: ${formData.username}\\nRemember me: ${formData.rememberMe}`);\n    setIsModalOpen(false); // Close modal after login\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"square-button\",\n        onClick: () => setIsModalOpen(true),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"square-button\",\n        onClick: () => alert('Signup button clicked!'),\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              value: formData.username,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group checkbox-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"rememberMe\",\n              name: \"rememberMe\",\n              checked: formData.rememberMe,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"rememberMe\",\n              children: \"Remember me next time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"login-button\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"cancel-button\",\n              onClick: () => setIsModalOpen(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"1ucL0D7b1W4fkTTmUhYsc60r9ew=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Main","_s","isModalOpen","setIsModalOpen","formData","setFormData","username","password","rememberMe","handleInputChange","e","name","value","type","checked","target","handleSubmit","preventDefault","alert","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/SmartCare/frontend/src/components/Mainbutt.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../Styles/Mainbutt.css';\r\n\r\nexport default function Main() {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [formData, setFormData] = useState({ username: '', password: '', rememberMe: false });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    alert(`Logged in as: ${formData.username}\\nRemember me: ${formData.rememberMe}`);\r\n    setIsModalOpen(false); // Close modal after login\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Buttons in the center */}\r\n      <div className=\"buttons-container\">\r\n        <button className=\"square-button\" onClick={() => setIsModalOpen(true)}>\r\n          Login\r\n        </button>\r\n        <button\r\n          className=\"square-button\"\r\n          onClick={() => alert('Signup button clicked!')}\r\n        >\r\n          Signup\r\n        </button>\r\n      </div>\r\n\r\n      {/* Login Modal */}\r\n      {isModalOpen && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal-content\">\r\n            <h2>Login</h2>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  value={formData.username}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  value={formData.password}\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group checkbox-group\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id=\"rememberMe\"\r\n                  name=\"rememberMe\"\r\n                  checked={formData.rememberMe}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <label htmlFor=\"rememberMe\">Remember me next time</label>\r\n              </div>\r\n              <div className=\"form-actions\">\r\n                <button type=\"submit\" className=\"login-button\">Login</button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"cancel-button\"\r\n                  onClick={() => setIsModalOpen(false)}\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}